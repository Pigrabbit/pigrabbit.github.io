{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx","path":"/blog","result":{"data":{"allPost":{"nodes":[{"__typename":"MdxPost","slug":"/fix-wrong-abstraction","title":"Fix wrong abstraction","date":"12.08.2021","excerpt":"프로그래머로서 가장 기본적으로 지키려고 노력하는 원칙 중 하나가 DRY(Do not Repeat Yourself)라고 생각합니다. \n같은 code snippet…","timeToRead":2,"description":null,"tags":[{"name":"Abstraction","slug":"abstraction"},{"name":"Inversion of Control","slug":"inversion-of-control"},{"name":"Javascript","slug":"javascript"},{"name":"Typescript","slug":"typescript"},{"name":"React","slug":"react"},{"name":"React Native","slug":"react-native"}]},{"__typename":"MdxPost","slug":"/say-hello-to-svelte","title":"Say hello to Svelte","date":"30.04.2021","excerpt":"Who are you Svelte? Cybernetically enhanced web apps Svelte는 웹 어플리케이션을 개발할 때 사용할 수 있는 또 하나의 JS 프레임워크입니다. \n Cybernetically enhanced web apps…","timeToRead":3,"description":null,"tags":[{"name":"Svelte","slug":"svelte"},{"name":"Javascript","slug":"javascript"},{"name":"Framework","slug":"framework"}]},{"__typename":"MdxPost","slug":"/enhance-user-experience-with-animation-in-react-native-application","title":"Enhance User Experience with animation in react native application","date":"30.03.2021","excerpt":"이 글에서는 React Native의 animation 동작 원리 및 Animated API에 대해 이야기합니다. client application에서 일반적으로 state value를 변경함으로써 UI를 업데이트 합니다.\n이 때 UI…","timeToRead":2,"description":null,"tags":[{"name":"React Native","slug":"react-native"},{"name":"Animation","slug":"animation"},{"name":"User Experience","slug":"user-experience"}]},{"__typename":"MdxPost","slug":"/deploying-deep-learning-model-with-react-native","title":"Deploying Deep Learning model with React Native","date":"24.02.2021","excerpt":"How I deployed 'Helmet Detection' model with React Native application The problem I wanted to solve was to check whether person wearing…","timeToRead":5,"description":null,"tags":[{"name":"Object Detection","slug":"object-detection"},{"name":"Deep Learning","slug":"deep-learning"},{"name":"Tensorflow.js","slug":"tensorflow-js"},{"name":"React Native","slug":"react-native"}]},{"__typename":"MdxPost","slug":"/testing-react-native-application","title":"Testing React Native Application","date":"29.01.2021","excerpt":"React Native Application에 테스트 자동화를 적용하게 된 이야기를 정리합니다 여러분의 React/React-Native 프로젝트에 테스트 자동화가 구축되어 있나요? \nTest Driven Development(이하 TDD…","timeToRead":2,"description":null,"tags":[{"name":"React Native","slug":"react-native"},{"name":"Test","slug":"test"}]},{"__typename":"MdxPost","slug":"/from-javascript-to-typescript","title":"From Javascript to Typescript","date":"28.10.2020","excerpt":"현재 진행중인 React 프로젝트가 Javascript로 되어있나요?\nApplication이 커질수록  undefined  나  TypeError…","timeToRead":3,"description":null,"tags":[{"name":"Typescript","slug":"typescript"},{"name":"Javascript","slug":"javascript"},{"name":"migration","slug":"migration"},{"name":"React","slug":"react"}]},{"__typename":"MdxPost","slug":"/between-client-side-rendering-and-server-side-rendering","title":"Between Client Side Rendering and Server Side Rendering","date":"22.09.2020","excerpt":"이 글은  Web at Google I/O 2019  의 \n Rendering on the Web: Performance Implications of Application Architecture \n세션을 듣고 정리한 글입니다. Web…","timeToRead":2,"description":null,"tags":[{"name":"Performance","slug":"performance"},{"name":"Architecture","slug":"architecture"}]},{"__typename":"MdxPost","slug":"/optimize-web-site-with-image-lazy-loading","title":"Optimize web site with Image Lazy loading","date":"14.08.2020","excerpt":"E-commerce, shopping mall 등 application을 개발하다보면 한 페이지에 수많은 image들이 삽입된다.\nimage가 사용자에게 상품을 보여주는 가장 보편적인 매체이기 때문이다. (미래에는 3D 영상, AR…","timeToRead":2,"description":null,"tags":[{"name":"Optimization","slug":"optimization"},{"name":"Performance","slug":"performance"},{"name":"React","slug":"react"},{"name":"Javascript","slug":"javascript"}]},{"__typename":"MdxPost","slug":"/observer-design-pattern-in-frontend","title":"Observer Design Pattern in Frontend","date":"04.08.2020","excerpt":"Frontend 개발에서 가장 흔한 interaction의 흐름은 event -> update state -> rerender 라고 할 수 있다.\n즉, 사용자에 의해 event가 발생하고, 그 event…","timeToRead":2,"description":null,"tags":[{"name":"Javascript","slug":"javascript"},{"name":"Design pattern","slug":"design-pattern"}]},{"__typename":"MdxPost","slug":"/build-your-own-vanilla-javascript-spa-router","title":"Build your own vanilla Javascript SPA router","date":"28.07.2020","excerpt":"SPA(Single Page Application) router 서버로부터 완전히 새로운 페이지를 불러오지 않고 현재 페이지를 web server로부터 받은 data를 이용해\n페이지를 동적으로 변경하는 Web Application을 SPA…","timeToRead":2,"description":null,"tags":[{"name":"Javascript","slug":"javascript"},{"name":"router","slug":"router"},{"name":"SPA","slug":"spa"}]},{"__typename":"MdxPost","slug":"/how-to-build-cross-browser-compatible-web","title":"How to build cross browser compatible web","date":"14.07.2020","excerpt":"Browser Compatibility Browser의 호환성을 맞추는 것이 Frontend Engineer에게 가장 큰 고충 중에 하나라고 생각한다. \n내가 작성한 Javascript 코드가, CSS…","timeToRead":1,"description":null,"tags":[{"name":"Babel","slug":"babel"},{"name":"Polyfill","slug":"polyfill"},{"name":"Javascript","slug":"javascript"}]}]}},"pageContext":{"formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}